# Generated by Django 4.2.7 on 2025-06-21 17:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nationality', models.CharField(blank=True, help_text="User's nationality/citizenship", max_length=100)),
                ('current_location', models.CharField(blank=True, help_text='Where user currently lives', max_length=100)),
                ('destination_country', models.CharField(blank=True, help_text='Country user wants to visit/move to', max_length=100)),
                ('visa_intent', models.TextField(blank=True, help_text='What user wants to do (travel, work, study, etc.)')),
                ('structured_data', models.JSONField(blank=True, default=dict, help_text='Key-value pairs extracted from conversation')),
                ('profile_context', models.TextField(blank=True, help_text="Rich context about user's situation")),
                ('conversation_insights', models.TextField(blank=True, help_text='Insights gathered during conversation')),
                ('missing_context', models.JSONField(blank=True, default=list, help_text='List of context areas LLM thinks are needed')),
                ('context_sufficient', models.BooleanField(default=False, help_text='LLM assessment of whether context is sufficient')),
                ('last_context_assessment', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='visa_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=100)),
                ('appointment_type', models.CharField(choices=[('consultation', 'Consultation'), ('document_review', 'Document Review'), ('application_submission', 'Application Submission'), ('interview_prep', 'Interview Preparation')], max_length=50)),
                ('scheduled_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('document_processed', 'Document Processed'), ('document_validation', 'Document Validation'), ('text_extraction', 'Text Extraction'), ('processing_error', 'Processing Error')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('file_type', models.CharField(blank=True, max_length=10)),
                ('document_type', models.CharField(blank=True, max_length=50)),
                ('file_size_kb', models.IntegerField(blank=True, null=True)),
                ('text_length', models.IntegerField(blank=True, null=True)),
                ('validation_result', models.CharField(blank=True, choices=[('valid', 'Valid'), ('invalid', 'Invalid'), ('error', 'Error')], max_length=10)),
                ('processing_successful', models.BooleanField(default=False)),
                ('error_type', models.CharField(blank=True, max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('reminder_type', models.CharField(choices=[('visa_appointment', 'Visa Appointment'), ('visa_expiry', 'Visa Expiry'), ('document_deadline', 'Document Deadline'), ('consultation', 'Consultation'), ('document_review', 'Document Review'), ('application_submission', 'Application Submission'), ('interview_prep', 'Interview Preparation')], max_length=50)),
                ('target_date', models.DateTimeField(help_text='The date/time this reminder is for')),
                ('reminder_date', models.DateTimeField(help_text='When to send the reminder')),
                ('status', models.CharField(choices=[('active', 'Active'), ('sent', 'Reminder Sent'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('email_sent', models.BooleanField(default=False)),
                ('email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['reminder_date', 'priority'],
                'indexes': [models.Index(fields=['user', 'status', 'reminder_date'], name='visa_remind_user_id_54fa43_idx'), models.Index(fields=['reminder_date', 'email_sent'], name='visa_remind_reminde_20820e_idx')],
            },
        ),
    ]
